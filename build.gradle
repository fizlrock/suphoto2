plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
  id 'org.openapi.generator' version '7.7.0'
  id "org.liquibase.gradle" version "2.2.2"
}

group = 'dev.fizlrock'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

springBoot {
    mainClass = 'dev.fizlrock.suphoto.SuphotoApplication'
}

configurations {

	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'


	compileOnly 'org.projectlombok:lombok:1.18.32'
	runtimeOnly 'org.postgresql:postgresql'


	implementation 'org.junit.platform:junit-platform-launcher'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'

	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation 'org.springdoc:springdoc-openapi-ui:1.8.0'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'


	liquibaseRuntime 'org.postgresql:postgresql'
	liquibaseRuntime 'org.liquibase:liquibase-core:4.24.0'
  liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:2.1.1'
  liquibaseRuntime 'info.picocli:picocli:4.7.5'
  liquibaseRuntime 'org.yaml:snakeyaml:1.33'

	implementation 'org.springframework.boot:spring-boot-starter-actuator:3.3.1'

	testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.projectlombok:lombok'
	
}

tasks.named('test') {
	useJUnitPlatform()
}



// Настройки для openApi плагина

compileJava.dependsOn tasks.openApiGenerate

openApiGenerate {
	inputSpec='src/main/resources/openapi.yaml'
	generatorName='spring'
	additionalProperties = [
		"useSpringBoot3":"true"	
	]
}

sourceSets {
    main {
        java{
            srcDirs 'build/generate-resources/main/src/main/java' 
        }
    }
}


liquibase {
  activities {
		main {
			changelogFile 'src/main/resources/db/changelog/db.changelog-master.yaml'
			url 'jdbc:postgresql://localhost:5432/photodb'
			username 'admin'
			password 'gracesecret'
			logLevel 'info'
			}
  }
}
